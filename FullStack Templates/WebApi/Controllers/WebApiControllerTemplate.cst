<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="..\..\Common\MasterTemplate.cs" Inherits="FullStack.Common.MasterTemplate" Description="Generates a set of HTML-based database documentation." OutputType="None" %>
<!-- #include file="..\..\Common\HeaderInclude.cst" -->
namespace <%= this.SolutionName %>.<%= this.CurrentProjectAlias %>.Controllers
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Net;
    using System.Net.Http;
    using System.Web.Http;
    
    using Newtonsoft.Json;

    using <%= this.SolutionName %>.<%= this.StackProjects["Engine"].Alias %>.Models;     
    using <%= this.SolutionName %>.<%= this.StackProjects["Engine"].Alias %>.Services;
    
    public partial class <%= CurrentTable.Name %>Controller <% this.RenderBodyWrite(": ApiController",string.Empty); %>
    {
        <% if (this.RenderBody) 
        { // START RENDERBODY
        %>
            public I<%= this.GetManagerClassName(CurrentTable) %> ManagerService { get; set; }
            
            public <%= CurrentTable.Name %>Controller()
            {
                this.ManagerService = new <%= this.GetManagerClassName(CurrentTable) %>();
            }
            
            public <%= CurrentTable.Name %>Controller(I<%= this.GetManagerClassName(CurrentTable) %> managerService)
            {
                if (managerService == null) 
                {
                    this.ManagerService = new <%= this.GetManagerClassName(CurrentTable) %>();
                }
                else 
                {
                    this.ManagerService = managerService;
                }
            }
        
           public IEnumerable<<%= this.GetModelClassName(CurrentTable) %>> Get()
            {
                return this.ManagerService.Read();                
            }

            // GET api/<%= this.GetClassName(CurrentTable) %>/5
            public <%= this.GetModelClassName(CurrentTable) %> Get(<%= this.GetPrimaryKeyType(CurrentTable) %> id)
            {
                return this.ManagerService.Read(id);
            }

            // POST api/<%= this.GetClassName(CurrentTable) %>
            public void Post([FromBody]string value)
            {
                <%= this.GetModelClassName(CurrentTable) %> model = JsonConvert.DeserializeObject<<%= this.GetModelClassName(CurrentTable) %>>(value);
                this.ManagerService.Create(model);
            }

            // PUT api/<%= this.GetClassName(CurrentTable) %>/5
            public void Put(<%= this.GetPrimaryKeyType(CurrentTable) %> id, [FromBody]string value)
            {
                <%= this.GetModelClassName(CurrentTable) %> model = JsonConvert.DeserializeObject<<%= this.GetModelClassName(CurrentTable) %>>(value);
                this.ManagerService.Update(model);
            }

            // DELETE api/<%= this.GetClassName(CurrentTable) %>/5
            public void Delete(<%= this.GetPrimaryKeyType(CurrentTable) %> id)
            {
                this.ManagerService.Delete(id);
            }
       <% } // END RENDERBODY %>       
    }
}
<script runat="template">

</script>