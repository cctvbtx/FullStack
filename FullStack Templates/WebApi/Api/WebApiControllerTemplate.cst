<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="..\..\Common\MasterTemplate.cs" Inherits="FullStack.Common.MasterTemplate" Description="Generates a set of HTML-based database documentation." OutputType="None" %>
<!-- #include file="..\..\Common\HeaderInclude.cst" -->
namespace <%= this.SolutionName %>.<%= this.CurrentProjectAlias %>.Api
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Net;
    using System.Net.Http;
    using System.Web.Http;
    
    using Newtonsoft.Json;

    using <%= this.SolutionName %>.<%= this.CurrentProjectAlias %>.Filters;
    using <%= this.SolutionName %>.<%= this.CurrentProjectAlias %>.Models;
     
    using <%= this.SolutionName %>.<%= this.StackProjects["Engine"].Alias %>.Models;     
    using <%= this.SolutionName %>.<%= this.StackProjects["Engine"].Alias %>.Services;
    
    [<%= this.SolutionName %>AuthenticationFilter()]
    public partial class <%= CurrentTable.Name %>Controller : ApiController
    {
         public I<%= this.GetManagerClassName(CurrentTable) %> ManagerService { get; set; }
            
            public <%= CurrentTable.Name %>Controller()
            {
                this.ManagerService = new <%= this.GetManagerClassName(CurrentTable) %>();
            }
            
            public <%= CurrentTable.Name %>Controller(I<%= this.GetManagerClassName(CurrentTable) %> managerService)
            {
                if (managerService == null) 
                {
                    this.ManagerService = new <%= this.GetManagerClassName(CurrentTable) %>();
                }
                else 
                {
                    this.ManagerService = managerService;
                }
            }
        
            public ApiResponse<IEnumerable<<%= this.GetModelClassName(CurrentTable) %>>> Get()
            {
                var response = new ApiResponse<IEnumerable<<%= this.GetModelClassName(CurrentTable) %>>>();
                try
                {
                    response = new ApiResponse<IEnumerable<<%= this.GetModelClassName(CurrentTable) %>>>(this.ManagerService.Read());
                }
                catch (Exception ex)
                {
                    
                    response.IsError = true;
                    response.AddError(ex);
                }
                
                return response;                
            }

            // GET api/<%= this.GetClassName(CurrentTable) %>/5
            public ApiResponse<<%= this.GetModelClassName(CurrentTable) %>> Get(<%= this.GetPrimaryKeyType(CurrentTable) %> id)
            {
                var response = new ApiResponse<<%= this.GetModelClassName(CurrentTable) %>>();
                try
                {
                    response = new ApiResponse<<%= this.GetModelClassName(CurrentTable) %>>(this.ManagerService.Read(id));
                }
                catch (Exception ex)
                {
                    
                    response.IsError = true;
                    response.AddError(ex);
                }
                
                return response;                      
            }

            // POST api/<%= this.GetClassName(CurrentTable) %>
            public  ApiResponse<<%= this.GetModelClassName(CurrentTable) %>> Post(<%= this.GetModelClassName(CurrentTable) %> value)
            {
                var response = new ApiResponse<<%= this.GetModelClassName(CurrentTable) %>>();
                try
                {
                    response = new ApiResponse<<%= this.GetModelClassName(CurrentTable) %>>(this.ManagerService.Create(value));
                }
                catch (Exception ex)
                {                    
                    response.IsError = true;
                    response.AddError(ex);
                }
                
                return response;
            }

            // PUT api/<%= this.GetClassName(CurrentTable) %>/5
            public  ApiResponse<<%= this.GetModelClassName(CurrentTable) %>> Put(<%= this.GetPrimaryKeyType(CurrentTable) %> id, <%= this.GetModelClassName(CurrentTable) %> value)
            {
                var response = new ApiResponse<<%= this.GetModelClassName(CurrentTable) %>>();
                try
                {
                    response = new ApiResponse<<%= this.GetModelClassName(CurrentTable) %>>(this.ManagerService.Update(value));
                }
                catch (Exception ex)
                {                    
                    response.IsError = true;
                    response.AddError(ex);
                }
                
                return response;
            }

            // DELETE api/<%= this.GetClassName(CurrentTable) %>/5
            public ApiResponse<bool> Delete(<%= this.GetPrimaryKeyType(CurrentTable) %> id)
            {
                var response = new ApiResponse<bool>();
                try
                {
                    response = new ApiResponse<bool>(this.ManagerService.Delete(id));
                }
                catch (Exception ex)
                {                    
                    response.IsError = true;
                    response.AddError(ex);
                }
                
                return response;
            }
        
    }
}
<script runat="template">

</script>