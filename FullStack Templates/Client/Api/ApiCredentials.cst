<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="..\..\Common\MasterTemplate.cs" Inherits="FullStack.Common.MasterTemplate" Description="Generates a set of HTML-based database documentation." OutputType="None" %>
<!-- #include file="..\..\Common\HeaderInclude.cst" -->
namespace <%= this.SolutionName %>.<%= this.CurrentProjectAlias %>.Api
{
    using System;
       
    internal partial class ApiCredentials
    {
        <% if (this.RenderBody) 
        { // START RENDERBODY
        %>
         #region Public Properties

        public static Uri ApiUri { get; set; }
        public static Uri BaseUri { get; set; }

        #endregion

        #region Properties

        /// <summary>
        ///     The base url with the correct versioned api path appended
        /// </summary>
        internal static string ApiUrl { get; set; }

        /// <summary>
        ///     The raw base URL
        /// </summary>
        internal static string BaseUrl { get; set; }

        /// <summary>
        ///     When the current session key expires
        /// </summary>
        internal static DateTime SessionExpiration { get; set; }

        /// <summary>
        ///     The current session key
        /// </summary>
        internal static string SessionKey { get; set; }

        #endregion

        #region Public Methods and Operators

        public static void ClearCredentials()
        {
            BaseUrl = String.Empty;
            BaseUri = null;
            SessionKey = String.Empty;
            SessionExpiration = DateTime.UtcNow.AddDays(-5);
            ApiUri = null;
            ApiUrl = String.Empty;
        }

        #endregion

        #region Methods

        internal static void SetCredentials(string sessionKey, DateTime expirationDate, string baseUrl)
        {
            SessionKey = sessionKey;
            SessionExpiration = expirationDate;

            if (string.IsNullOrWhiteSpace(baseUrl))
            {
                BaseUrl = string.Empty;
                BaseUri = null;
                ApiUri = null;
                ApiUrl = string.Empty;
            }
            else
            {
                BaseUrl = baseUrl;
                BaseUri = new Uri(BaseUrl);
                ApiUri = new Uri(BaseUri, "api/");
                ApiUrl = ApiUri.ToString();
            }
        }

        #endregion
        <% } // END RENDERBODY %>        
    }
}