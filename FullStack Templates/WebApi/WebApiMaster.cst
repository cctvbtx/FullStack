<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="..\Common\MasterTemplate.cs" Inherits="FullStack.Common.MasterTemplate" OutputType="None" CompilerVersion="v4.0" %>
<%@ Register Name="ProjectTemplate" Template="../Resources/EmptyProject.cst" %>
<%@ Register Name="AssemblyInfoTemplate" Template="../Resources/AssemblyInfoTemplate.cst" %>
<%@ Register Name="ControllerTemplate" Template="Controllers/WebApiController.cst" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="System.Design" %>
<%@ Assembly Name="System.Linq" %>
<%@ Assembly Name="System.Xml.Linq" %>
<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import NameSpace="System.IO" %>
<%@ Import Namespace="System.Data" %>
<script runat="template">
private int _currentStep = 0;
private int _currentTableCount = 0;
private int _totalTableCount = 0;

public override void Render(TextWriter writer)
{
    
    this.ClearDirectory(Path.Combine(this.OutputDirectory,this.SolutionName,this.CurrentProjectAlias));
    this.ClearDirectory(Path.Combine(this.OutputDirectory,this.SolutionName,this.CurrentProjectAlias, "Controllers"));
    
    string projectLocation = Path.Combine(this.OutputDirectory,this.SolutionName,this.CurrentProjectAlias, this.CurrentProjectAlias + ".csproj");
   
    if (this.CreateProjectFiles)
    {
        ProjectTemplate projectTemplate = this.Create<ProjectTemplate>();
        this.CopyPropertiesTo(projectTemplate);
        projectTemplate.RenderToFile(projectLocation, true);    

        string engineAlias = this.ProjectAliases["Engine"];
        this.AddProjectReferenceToProject(projectLocation, string.Format("../{0}/{0}.csproj",engineAlias), ProjectGuids["Engine"], engineAlias);
        this.CleanupProjectFile(projectLocation);
  
        // Copy Packages
        File.Copy(Path.Combine(this.CodeTemplateInfo.DirectoryName,"packages.config"),Path.Combine(this.OutputDirectory,this.SolutionName,this.CurrentProjectAlias,"packages.config"));
    }

    
    AssemblyInfoTemplate assemblyTemplate = this.Create<AssemblyInfoTemplate>();
    this.CopyPropertiesTo(assemblyTemplate);
    string assemblyTemplateLocation = Path.Combine(this.OutputDirectory,this.SolutionName,this.CurrentProjectAlias,"Properties","AssemblyInfo.cs");
    assemblyTemplate.RenderToFile(assemblyTemplateLocation, true);
    
    _totalTableCount = this.SourceDatabase.Tables.Count;
    _currentTableCount = 0;
    
    foreach(TableSchema table in this.SourceDatabase.Tables)
    {
        this.CurrentTable = table;
        _currentTableCount++;
     
        if (this.HasValidPrimaryKey(this.CurrentTable))
        {
            _currentStep = 1;
             
            this.BuildCurrentTableTemplate(this.Create<ControllerTemplate>(), projectLocation,"Controllers","{0}Controller.gen.cs","{0}Controller.cs");            
        }
    }
}

</script>